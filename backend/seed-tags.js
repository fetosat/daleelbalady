import { PrismaClient } from './generated/prisma/client.js';

const prisma = new PrismaClient();

const commonTags = [
    'ÿ•ŸÑŸÉÿ™ÿ±ŸàŸÜŸäÿßÿ™',
    'ŸÖŸÑÿßÿ®ÿ≥',
    'ÿ£ÿ∫ÿ∞Ÿäÿ© ŸàŸÖÿ¥ÿ±Ÿàÿ®ÿßÿ™',
    'ÿµÿ≠ÿ© Ÿàÿ¨ŸÖÿßŸÑ',
    'ŸÉÿ™ÿ® ŸàŸÇÿ±ÿ∑ÿßÿ≥Ÿäÿ©',
    'ŸÖŸÜÿ≤ŸÑ ŸàŸÖŸÅÿ±Ÿàÿ¥ÿßÿ™',
    'ÿ±Ÿäÿßÿ∂ÿ© ŸàŸÑŸäÿßŸÇÿ©',
    'ÿ£ŸÑÿπÿßÿ® ÿ£ÿ∑ŸÅÿßŸÑ',
    'ÿ≥Ÿäÿßÿ±ÿßÿ™ Ÿàÿ•ŸÉÿ≥ÿ≥Ÿàÿßÿ±ÿßÿ™',
    'ŸÖÿ¨ŸàŸáÿ±ÿßÿ™ Ÿàÿ•ŸÉÿ≥ÿ≥Ÿàÿßÿ±ÿßÿ™',
    'ÿ£ÿ¨Ÿáÿ≤ÿ© ŸÖŸÜÿ≤ŸÑŸäÿ©',
    'ÿ£ÿØŸàÿßÿ™ ŸàŸÖÿπÿØÿßÿ™',
    'ÿ≠ŸÇÿßÿ¶ÿ® Ÿàÿ£ÿ≠ÿ∞Ÿäÿ©',
    'ŸáŸàÿßÿ™ŸÅ Ÿàÿ™ÿßÿ®ŸÑÿ™',
    'ŸÉŸÖÿ®ŸäŸàÿ™ÿ± ŸàŸÑÿßÿ®ÿ™Ÿàÿ®',
    'ÿ£ÿ´ÿßÿ´',
    'ÿ•ÿ∂ÿßÿ°ÿ© ŸàÿØŸäŸÉŸàÿ±',
    'ÿ≠ÿØÿßÿ¶ŸÇ ŸàŸÜÿ®ÿßÿ™ÿßÿ™',
    'ÿ≠ŸäŸàÿßŸÜÿßÿ™ ÿ£ŸÑŸäŸÅÿ©',
    'ÿ£ÿÆÿ±Ÿâ'
];

async function seedTags() {
    console.log('üå± Seeding product tags...\n');
    
    let created = 0;
    let skipped = 0;
    
    for (const tagName of commonTags) {
        try {
            // Check if tag exists
            const existing = await prisma.tags.findFirst({
                where: { name: tagName }
            });
            
            if (existing) {
                console.log(`‚è≠Ô∏è  Skipped: ${tagName} (already exists)`);
                skipped++;
            } else {
                await prisma.tags.create({
                    data: { name: tagName }
                });
                console.log(`‚úÖ Created: ${tagName}`);
                created++;
            }
        } catch (error) {
            console.error(`‚ùå Error creating tag ${tagName}:`, error.message);
        }
    }
    
    console.log(`\nüìä Summary:`);
    console.log(`   ‚úÖ Created: ${created}`);
    console.log(`   ‚è≠Ô∏è  Skipped: ${skipped}`);
    console.log(`   üìã Total: ${commonTags.length}`);
    
    // Fetch and display all tags
    const allTags = await prisma.tags.findMany({
        orderBy: { name: 'asc' }
    });
    
    console.log(`\nüìã All tags in database (${allTags.length}):`);
    allTags.forEach((tag, index) => {
        console.log(`   ${index + 1}. ${tag.name}`);
    });
}

seedTags()
    .then(async () => {
        await prisma.$disconnect();
        console.log('\n‚úÖ Done!');
    })
    .catch(async (error) => {
        console.error('\n‚ùå Error:', error);
        await prisma.$disconnect();
        process.exit(1);
    });

