#!/usr/bin/env node

/**
 * ูููุฉ Cron ูุชุฌุฏูุฏ PIN ุงูุดูุฑู ูุฌููุน ุงูุฎุทุท ุงููุฏููุนุฉ
 * 
 * ูุชู ุชุดุบูู ูุฐุง ุงูุณูุฑูุจุช ุดูุฑูุงู ูู ุงูููู ุงูุฃูู ูู ูู ุดูุฑ
 * ูุชุฌุฏูุฏ ุฃุฑูุงู PIN ูุฌููุน ุงููุดุชุฑููู ูู ุงูุฎุทุท ุงููุฏููุนุฉ
 * 
 * ุงุณุชุฎุฏุงู:
 * node scripts/renewMonthlyPins.js
 * 
 * ุฃู ุนุจุฑ cron job:
 * 0 0 1 * * /usr/bin/node /path/to/backend/scripts/renewMonthlyPins.js
 */

const PlanService = require('../services/planService');
const PinService = require('../services/pinService');

async function renewMonthlyPins() {
  console.log('๐ ุจุฏุก ุชุฌุฏูุฏ ุฃุฑูุงู PIN ุงูุดูุฑูุฉ...');
  console.log(`๐ ุงูุชุงุฑูุฎ: ${new Date().toISOString()}`);
  console.log(`๐ ุงูุดูุฑ ุงูุญุงูู: ${PinService.getCurrentMonthYear()}`);
  
  try {
    const startTime = Date.now();
    
    // ุชุฌุฏูุฏ ุฃุฑูุงู PIN
    const renewedCount = await PlanService.renewMonthlyPins();
    
    const endTime = Date.now();
    const duration = (endTime - startTime) / 1000;
    
    console.log('โ ุชู ุชุฌุฏูุฏ ุฃุฑูุงู PIN ุจูุฌุงุญ!');
    console.log(`๐ ุนุฏุฏ ุงูุฎุทุท ุงููุฌุฏุฏุฉ: ${renewedCount}`);
    console.log(`โฑ๏ธ ุงูููุช ุงููุณุชุบุฑู: ${duration} ุซุงููุฉ`);
    
    // ุฅุฑุณุงู ุชูุฑูุฑ (ูููู ุฅุถุงูุฉ ุฅุฑุณุงู ุจุฑูุฏ ุฅููุชุฑููู ุฃู ุฅุดุนุงุฑ)
    if (renewedCount > 0) {
      console.log(`๐ง ุชู ุชุฌุฏูุฏ ${renewedCount} ุฑูู PIN ููุดูุฑ ุงูุฌุฏูุฏ`);
      
      // ููุง ูููู ุฅุถุงูุฉ ุฅุฑุณุงู ุฅุดุนุงุฑุงุช ูููุณุชุฎุฏููู
      // await sendPinRenewalNotifications(renewedCount);
    } else {
      console.log('โน๏ธ ูุง ุชูุฌุฏ ุฃุฑูุงู PIN ุชุญุชุงุฌ ููุชุฌุฏูุฏ');
    }
    
    process.exit(0);
  } catch (error) {
    console.error('โ ุฎุทุฃ ูู ุชุฌุฏูุฏ ุฃุฑูุงู PIN:', error);
    
    // ุฅุฑุณุงู ุชูุจูู ูููุทูุฑูู
    console.error('๐จ ุชู ุฅุฑุณุงู ุชูุจูู ูููุทูุฑูู');
    
    process.exit(1);
  }
}

/**
 * ุฅุฑุณุงู ุฅุดุนุงุฑุงุช ุชุฌุฏูุฏ PIN ูููุณุชุฎุฏููู (ููุชูููุฐ ุงููุณุชูุจูู)
 */
async function sendPinRenewalNotifications(count) {
  // ูููู ุชูููุฐ ูุฐุง ูุงุญูุงู ูุฅุฑุณุงู ุฅุดุนุงุฑุงุช ูููุณุชุฎุฏููู
  // ุนู ุชุฌุฏูุฏ ุฑูู PIN ุงูุฎุงุต ุจูู
  console.log(`๐ฑ ุณูุชู ุฅุฑุณุงู ${count} ุฅุดุนุงุฑ ุชุฌุฏูุฏ PIN`);
}

/**
 * ุชุดุบูู ุงูุณูุฑูุจุช ุฅุฐุง ุชู ุงุณุชุฏุนุงุคู ูุจุงุดุฑุฉ
 */
if (require.main === module) {
  renewMonthlyPins();
}

module.exports = {
  renewMonthlyPins,
  sendPinRenewalNotifications
};
